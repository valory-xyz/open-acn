name: open-ACN sanity checks and tests


on:
  push:
    branches:
      - develop
      - main
  pull_request:


jobs:
  
  common_checks_1:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@master
        with:
          go-version: "1.17.7"
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
      - name: Golang code style check (libp2p_node)
        uses: golangci/golangci-lint-action@v3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          version: v1.28
          working-directory: ./

  golang_checks:
    continue-on-error: True
    needs:
    - common_checks_1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6]
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-go@master
      with:
        go-version: "1.17.7"
    - if: matrix.os == 'macos-latest'
      working-directory: .
      run: |
         export LINKPATH=$GOROOT/pkg/tool/darwin_amd64/link
         echo $LINKPATH
         sudo cp $LINKPATH ${LINKPATH}_orig
         sudo cp link $LINKPATH
         sudo chmod a+x $LINKPATH
    - if: matrix.python-version == '3.6'
      name: Golang unit tests (libp2p_node)
      working-directory: ./
      run: make test

  libp2p_coverage:
    name: libp2p_coverage
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17.7
        uses: actions/setup-go@v1
        with:
          go-version: "1.17.7"
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          sudo apt-get install make -y
      - name: Get dependencies
        working-directory: ./
        run: |
          make install
      - name: Generate coverage report
        working-directory: ./
        run: |
          make test
      - name: Print coverage report
        working-directory: ./
        run: |
          go tool cover -func=coverage.txt    
